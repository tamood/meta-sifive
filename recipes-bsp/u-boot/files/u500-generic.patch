diff --git a/arch/riscv/Kconfig b/arch/riscv/Kconfig
index d9854f5283..1e814a48ba 100644
--- a/arch/riscv/Kconfig
+++ b/arch/riscv/Kconfig
@@ -20,6 +20,9 @@ config TARGET_QEMU_VIRT
 config TARGET_SIFIVE_FU540
 	bool "Support SiFive FU540 Board"
 
+config TARGET_SIFIVE_FU500
+	bool "Support SiFive Freedom U500 build"
+
 endchoice
 
 config SYS_ICACHE_OFF
@@ -53,6 +56,7 @@ source "board/AndesTech/ax25-ae350/Kconfig"
 source "board/emulation/qemu-riscv/Kconfig"
 source "board/microchip/mpfs_icicle/Kconfig"
 source "board/sifive/fu540/Kconfig"
+source "board/sifive/fu500/Kconfig"
 
 # platform-specific options below
 source "arch/riscv/cpu/ax25/Kconfig"
diff --git a/arch/riscv/dts/Makefile b/arch/riscv/dts/Makefile
index 4f30e6936f..b676baed7d 100644
--- a/arch/riscv/dts/Makefile
+++ b/arch/riscv/dts/Makefile
@@ -2,6 +2,8 @@
 
 dtb-$(CONFIG_TARGET_AX25_AE350) += ae350_32.dtb ae350_64.dtb
 dtb-$(CONFIG_TARGET_SIFIVE_FU540) += hifive-unleashed-a00.dtb
+dtb-$(CONFIG_TARGET_SIFIVE_FU500) += rocket-chip.dtb
+
 
 targets += $(dtb-y)
 
diff --git a/arch/riscv/dts/rocket-chip.dts b/arch/riscv/dts/rocket-chip.dts
new file mode 100644
index 0000000000..f6c9b16f46
--- /dev/null
+++ b/arch/riscv/dts/rocket-chip.dts
@@ -0,0 +1,288 @@
+/dts-v1/;
+
+/ {
+	#address-cells = <1>;
+	#size-cells = <1>;
+	compatible = "freechips,rocketchip-unknown-dev";
+	model = "freechips,rocketchip-unknown";
+	L34: aliases {
+		serial0 = &L14;
+		serial1 = &L15;
+	};
+	chosen {
+        stdout-path = "serial0";
+    };
+	L33: cpus {
+		#address-cells = <1>;
+		#size-cells = <0>;
+       timebase-frequency = <1000000>;
+		L9: cpu@0 {
+			clock-frequency = <50000000>;
+			compatible = "sifive,rocket0", "riscv";
+			device_type = "cpu";
+			hardware-exec-breakpoint-count = <2>;
+			i-cache-block-size = <64>;
+			i-cache-sets = <64>;
+			i-cache-size = <4096>;
+			next-level-cache = <&L29>;
+			reg = <0x0>;
+			riscv,isa = "rv64imafdc";
+			riscv,pmpregions = <8>;
+			sifive,dtim = <&L8>;
+			status = "okay";
+			timebase-frequency = <1000000>;
+			L6: interrupt-controller {
+				#interrupt-cells = <1>;
+				compatible = "riscv,cpu-intc";
+				interrupt-controller;
+			};
+		};
+		L12: cpu@1 {
+			clock-frequency = <50000000>;
+			compatible = "sifive,rocket0", "riscv";
+			d-cache-block-size = <64>;
+			d-cache-sets = <64>;
+			d-cache-size = <16384>;
+			d-tlb-sets = <1>;
+			d-tlb-size = <32>;
+			device_type = "cpu";
+			hardware-exec-breakpoint-count = <2>;
+			i-cache-block-size = <64>;
+			i-cache-sets = <64>;
+			i-cache-size = <16384>;
+			i-tlb-sets = <1>;
+			i-tlb-size = <32>;
+			mmu-type = "riscv,sv39";
+			next-level-cache = <&L29>;
+			reg = <0x1>;
+			riscv,isa = "rv64imafdc";
+			riscv,pmpregions = <8>;
+			status = "okay";
+			timebase-frequency = <1000000>;
+			tlb-split;
+			L10: interrupt-controller {
+				#interrupt-cells = <1>;
+				compatible = "riscv,cpu-intc";
+				interrupt-controller;
+			};
+		};
+	};
+	L29: memory@80000000 {
+		device_type = "memory";
+		reg = <0x80000000 0x8000000>;
+	};
+	L32: soc {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "freechips,rocketchip-unknown-soc", "simple-bus";
+		ranges;
+		L3: clint@2000000 {
+			compatible = "riscv,clint0";
+			interrupts-extended = <&L6 3 &L6 7 &L10 3 &L10 7>;
+			reg = <0x2000000 0x10000>;
+			reg-names = "control";
+		};
+		L4: debug-controller@0 {
+			compatible = "sifive,debug-013", "riscv,debug-013";
+			debug-attach = "jtag";
+			interrupts-extended = <&L6 65535 &L10 65535>;
+			reg = <0x0 0x1000>;
+			reg-names = "control";
+		};
+		L8: dtim@1000000 {
+			compatible = "sifive,dtim0";
+			reg = <0x1000000 0x8000>;
+			reg-names = "mem";
+		};
+		L1: error-device@3000 {
+			compatible = "sifive,error0";
+			reg = <0x3000 0x1000>;
+		};
+		L20: gpio@10060000 {
+			#gpio-cells = <2>;
+			#interrupt-cells = <2>;
+			clocks = <&L0>;
+			compatible = "sifive,gpio0", "sifive,gpio1";
+			gpio-controller;
+			interrupt-controller;
+			interrupt-parent = <&L2>;
+			interrupts = <7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28>;
+			reg = <0x10060000 0x1000>;
+			reg-names = "control";
+		};
+		L21: gpio@10061000 {
+			#gpio-cells = <2>;
+			#interrupt-cells = <2>;
+			clocks = <&L0>;
+			compatible = "sifive,gpio0", "sifive,gpio1";
+			gpio-controller;
+			interrupt-controller;
+			interrupt-parent = <&L2>;
+			interrupts = <29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49>;
+			reg = <0x10061000 0x1000>;
+			reg-names = "control";
+		};
+		L22: gpio@10062000 {
+			#gpio-cells = <2>;
+			#interrupt-cells = <2>;
+			clocks = <&L0>;
+			compatible = "sifive,gpio0", "sifive,gpio1";
+			gpio-controller;
+			interrupt-controller;
+			interrupt-parent = <&L2>;
+			interrupts = <50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81>;
+			reg = <0x10062000 0x1000>;
+			reg-names = "control";
+		};
+		L23: gpio@10063000 {
+			#gpio-cells = <2>;
+			#interrupt-cells = <2>;
+			clocks = <&L0>;
+			compatible = "sifive,gpio0", "sifive,gpio1";
+			gpio-controller;
+			interrupt-controller;
+			interrupt-parent = <&L2>;
+			interrupts = <82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97>;
+			reg = <0x10063000 0x1000>;
+			reg-names = "control";
+		};
+		L27: i2c@10030000 {
+			clocks = <&L0>;
+			compatible = "sifive,i2c0";
+			interrupt-parent = <&L2>;
+			interrupts = <110>;
+			reg = <0x10030000 0x1000>;
+			reg-names = "control";
+		};
+		L28: i2c@10031000 {
+			clocks = <&L0>;
+			compatible = "sifive,i2c0";
+			interrupt-parent = <&L2>;
+			interrupts = <111>;
+			reg = <0x10031000 0x1000>;
+			reg-names = "control";
+		};
+		L2: interrupt-controller@c000000 {
+			#interrupt-cells = <1>;
+			compatible = "riscv,plic0";
+			interrupt-controller;
+			interrupts-extended = <&L6 11 &L10 11 &L10 9>;
+			reg = <0xc000000 0x4000000>;
+			reg-names = "control";
+			riscv,max-priority = <7>;
+			riscv,ndev = <111>;
+		};
+		L24: pwm@10020000 {
+			clocks = <&L0>;
+			compatible = "sifive,pwm0";
+			interrupt-parent = <&L2>;
+			interrupts = <98 99 100 101>;
+			reg = <0x10020000 0x1000>;
+			reg-names = "control";
+			sifive,comparator-widthbits = <16>;
+			sifive,ncomparators = <4>;
+		};
+		L25: pwm@10021000 {
+			clocks = <&L0>;
+			compatible = "sifive,pwm0";
+			interrupt-parent = <&L2>;
+			interrupts = <102 103 104 105>;
+			reg = <0x10021000 0x1000>;
+			reg-names = "control";
+			sifive,comparator-widthbits = <16>;
+			sifive,ncomparators = <4>;
+		};
+		L26: pwm@10022000 {
+			clocks = <&L0>;
+			compatible = "sifive,pwm0";
+			interrupt-parent = <&L2>;
+			interrupts = <106 107 108 109>;
+			reg = <0x10022000 0x1000>;
+			reg-names = "control";
+			sifive,comparator-widthbits = <16>;
+			sifive,ncomparators = <4>;
+		};
+		L13: rom@10000 {
+			compatible = "sifive,maskrom0";
+			reg = <0x10000 0x8000>;
+			reg-names = "mem";
+		};
+		L14: serial@10010000 {
+			clocks = <&L0>;
+			compatible = "sifive,uart0";
+			interrupt-parent = <&L2>;
+			interrupts = <1>;
+			reg = <0x10010000 0x1000>;
+			reg-names = "control";
+		};
+		L15: serial@10011000 {
+			clocks = <&L0>;
+			compatible = "sifive,uart0";
+			interrupt-parent = <&L2>;
+			interrupts = <2>;
+			reg = <0x10011000 0x1000>;
+			reg-names = "control";
+		};
+		L18: spi@10040000 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			clocks = <&L0>;
+			compatible = "sifive,spi0";
+			interrupt-parent = <&L2>;
+			interrupts = <5>;
+			reg = <0x10040000 0x1000 0x20000000 0x1000000>;
+			reg-names = "control", "mem";
+			L30: flash {
+				compatible = "jedec,spi-nor";
+				m25p,fast-read;
+				spi-max-frequency = <50000000>;
+				spi-rx-bus-width = <4>;
+				spi-tx-bus-width = <4>;
+			};
+		};
+		L19: spi@10041000 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			clocks = <&L0>;
+			compatible = "sifive,spi0";
+			interrupt-parent = <&L2>;
+			interrupts = <6>;
+			reg = <0x10041000 0x1000 0x30000000 0x1000000>;
+			reg-names = "control", "mem";
+		};
+		L16: spi@10050000 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			clocks = <&L0>;
+			compatible = "sifive,spi0";
+			interrupt-parent = <&L2>;
+			interrupts = <3>;
+			reg = <0x10050000 0x1000>;
+			reg-names = "control";
+			status = "okay";
+			mmc@0 {
+				compatible = "mmc-spi-slot";
+				reg = <0>;
+				spi-max-frequency = <10000000>;
+				voltage-ranges = <3300 3300>;
+				disable-wp;
+			};
+		};
+		L17: spi@10051000 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			clocks = <&L0>;
+			compatible = "sifive,spi0";
+			interrupt-parent = <&L2>;
+			interrupts = <4>;
+			reg = <0x10051000 0x1000>;
+			reg-names = "control";
+		};
+		L0: subsystem_pbus_clock {
+			#clock-cells = <0>;
+			clock-frequency = <50000000>;
+			clock-output-names = "subsystem_pbus_clock";
+			compatible = "fixed-clock";
+		};
+	};
+};
diff --git a/board/sifive/fu500/Kconfig b/board/sifive/fu500/Kconfig
new file mode 100644
index 0000000000..dedd19ba4a
--- /dev/null
+++ b/board/sifive/fu500/Kconfig
@@ -0,0 +1,55 @@
+if TARGET_SIFIVE_FU500
+
+config SYS_BOARD
+	default "fu500"
+
+config SYS_VENDOR
+	default "sifive"
+
+config SYS_CPU
+	default "generic"
+
+config SYS_CONFIG_NAME
+	default "sifive-fu500"
+
+config SYS_TEXT_BASE
+	default 0x80200000 if SPL
+	default 0x80000000 if !RISCV_SMODE
+	default 0x80200000 if RISCV_SMODE
+
+config SPL_TEXT_BASE
+	default 0x08000000
+
+config SPL_OPENSBI_LOAD_ADDR
+	default 0x80000000
+
+config BOARD_SPECIFIC_OPTIONS # dummy
+	def_bool y
+	select GENERIC_RISCV
+	select RAM
+	imply CMD_EXT2
+	imply CMD_EXT4
+	imply CMD_FAT
+	imply CMD_FS_GENERIC
+	imply CMD_GPT
+	imply PARTITION_TYPE_GUID
+	imply CMD_SF
+	imply DOS_PARTITION
+	imply EFI_PARTITION
+	imply ISO_PARTITION
+	imply SIFIVE_SERIAL
+	imply SPI
+	imply SPI_SIFIVE
+	imply SPI_FLASH
+	imply SPI_FLASH_ISSI
+	imply MMC
+	imply MMC_SPI
+	imply MMC_BROKEN_CD
+	imply CMD_MMC
+	imply DM_GPIO
+	imply SIFIVE_GPIO
+	imply CMD_GPIO
+	imply SMP
+	imply MISC
+
+endif
diff --git a/board/sifive/fu500/Makefile b/board/sifive/fu500/Makefile
new file mode 100644
index 0000000000..64e887a16a
--- /dev/null
+++ b/board/sifive/fu500/Makefile
@@ -0,0 +1,5 @@
+# SPDX-License-Identifier: GPL-2.0+
+#
+# Copyright (c) 2019 Western Digital Corporation or its affiliates.
+
+obj-y	+= fu500.o
diff --git a/board/sifive/fu500/fu500.c b/board/sifive/fu500/fu500.c
new file mode 100644
index 0000000000..252d4c385f
--- /dev/null
+++ b/board/sifive/fu500/fu500.c
@@ -0,0 +1,24 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (c) 2019 Western Digital Corporation or its affiliates.
+ *
+ * Authors:
+ *   Anup Patel <anup.patel@wdc.com>
+ */
+
+#include <dm.h>
+#include <env.h>
+#include <init.h>
+#include <log.h>
+#include <linux/bug.h>
+#include <linux/delay.h>
+#include <linux/io.h>
+#include <misc.h>
+#include <spl.h>
+
+int board_init(void)
+{
+	/* For now nothing to do here. */
+
+	return 0;
+}
diff --git a/configs/sifive_fu500_defconfig b/configs/sifive_fu500_defconfig
new file mode 100644
index 0000000000..36542d80d1
--- /dev/null
+++ b/configs/sifive_fu500_defconfig
@@ -0,0 +1,21 @@
+CONFIG_RISCV=y
+CONFIG_SPL_GPIO_SUPPORT=y
+CONFIG_SYS_MALLOC_F_LEN=0x3000
+CONFIG_ENV_SIZE=0x20000
+CONFIG_SPL_MMC_SUPPORT=y
+CONFIG_NR_DRAM_BANKS=1
+CONFIG_SPL_SPI_SUPPORT=y
+CONFIG_TARGET_SIFIVE_FU500=y
+CONFIG_ARCH_RV64I=y
+CONFIG_RISCV_SMODE=y
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_FIT=y
+CONFIG_DISPLAY_CPUINFO=y
+CONFIG_DISPLAY_BOARDINFO=y
+CONFIG_SPL_SEPARATE_BSS=y
+CONFIG_SPL_YMODEM_SUPPORT=y
+CONFIG_OF_BOARD_FIXUP=y
+CONFIG_DEFAULT_DEVICE_TREE="rocket-chip"
+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
+CONFIG_SPL_CLK=y
+CONFIG_DM_MTD=y
diff --git a/include/configs/sifive-fu500.h b/include/configs/sifive-fu500.h
new file mode 100644
index 0000000000..4b167d4b17
--- /dev/null
+++ b/include/configs/sifive-fu500.h
@@ -0,0 +1,62 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * Copyright (c) 2019 Western Digital Corporation or its affiliates.
+ *
+ * Authors:
+ *   Anup Patel <anup.patel@wdc.com>
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+#include <linux/sizes.h>
+
+#define CONFIG_SYS_SDRAM_BASE		0x80000000
+#define CONFIG_SYS_INIT_SP_ADDR		(CONFIG_SYS_SDRAM_BASE + SZ_2M)
+
+#define CONFIG_SYS_LOAD_ADDR		(CONFIG_SYS_SDRAM_BASE + SZ_2M)
+
+#define CONFIG_SYS_MALLOC_LEN		SZ_8M
+
+#define CONFIG_SYS_BOOTM_LEN		SZ_64M
+
+#define CONFIG_STANDALONE_LOAD_ADDR	0x80200000
+
+/* Environment options */
+
+#ifndef CONFIG_SPL_BUILD
+#define BOOT_TARGET_DEVICES(func) \
+	func(MMC, mmc, 0) \
+	func(DHCP, dhcp, na)
+
+#include <config_distro_bootcmd.h>
+
+#define TYPE_GUID_LOADER1	"5B193300-FC78-40CD-8002-E86C45580B47"
+#define TYPE_GUID_LOADER2	"2E54B353-1271-4842-806F-E436D6AF6985"
+#define TYPE_GUID_SYSTEM	"0FC63DAF-8483-4772-8E79-3D69D8477DE4"
+
+#define PARTS_DEFAULT \
+	"name=loader1,start=17K,size=1M,type=${type_guid_gpt_loader1};" \
+	"name=loader2,size=4MB,type=${type_guid_gpt_loader2};" \
+	"name=system,size=-,bootable,type=${type_guid_gpt_system};"
+
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	"fdt_high=0xffffffffffffffff\0" \
+	"initrd_high=0xffffffffffffffff\0" \
+	"kernel_addr_r=0x84000000\0" \
+	"fdt_addr_r=0x85000000\0" \
+	"scriptaddr=0x85100000\0" \
+	"pxefile_addr_r=0x85200000\0" \
+	"ramdisk_addr_r=0x85300000\0" \
+	"type_guid_gpt_loader1=" TYPE_GUID_LOADER1 "\0" \
+	"type_guid_gpt_loader2=" TYPE_GUID_LOADER2 "\0" \
+	"type_guid_gpt_system=" TYPE_GUID_SYSTEM "\0" \
+	"partitions=" PARTS_DEFAULT "\0" \
+	BOOTENV
+
+#define CONFIG_PREBOOT \
+	"setenv fdt_addr ${fdtcontroladdr};" \
+	"fdt addr ${fdtcontroladdr};"
+#endif
+
+#endif /* __CONFIG_H */
